{"version":3,"sources":["scripts/extended_cotform.min.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","ExtendedCot_Form","_cot_form","this","apply","arguments","cot_form","fieldDefinition","fieldContainer","$","prop","retVal","excluded","AbstractExtendedCotForm","CotForm","ExtendedCotForm","_AbstractExtendedCotF","definition","_this2","Error","_isRendered","_definition","_useBinding","_model","cotForm","id","title","rootPath","success","_cotForm","bindableTypes","forEach","sectionInfo","index","section","addSection","className","readSectionName","row","field","type","indexOf","addRow","addGrid","addRepeatControl","_this3","options","preRenderPromises","sectionsIndex","sectionsLength","sections","preRender","getGlobal","push","view","rowsIndex","rowsLength","rows","fieldsIndex","fieldsLength","fields","choices","bindTo","map","text","unshift","Promise","all","then","postRenderPromises","_sectionsIndex","_sectionsLength","_section","postRender","_rowsIndex","_rowsLength","_row","_fieldsIndex","_fieldsLength","_field"],"mappings":"AAAA,aAEA,IAAIA,aAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,OAAO,SAAUO,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYb,EAAiBY,EAAYG,UAAWF,GAAiBC,GAAad,EAAiBY,EAAaE,GAAqBF,GAA7gB,GAEfI,KAAO,SAASC,EAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASN,WAAW,IAAIO,EAAOb,OAAOc,yBAAyBL,EAAQC,GAAW,QAAaK,IAATF,EAAoB,CAAE,IAAIG,EAAShB,OAAOiB,eAAeR,GAAS,OAAe,OAAXO,OAAmB,EAAkCR,EAAIQ,EAAQN,EAAUC,GAAoB,GAAI,UAAWE,EAAQ,OAAOA,EAAKK,MAAgB,IAAIC,EAASN,EAAKL,IAAK,YAAeO,IAAXI,EAAmDA,EAAOC,KAAKT,QAAnE,GAEzZ,SAASU,gBAAgBC,EAAUnB,GAAe,KAAMmB,aAAoBnB,GAAgB,MAAM,IAAIoB,UAAU,qCAEhH,SAASC,2BAA2BC,EAAML,GAAQ,IAAKK,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAON,GAAyB,iBAATA,GAAqC,mBAATA,EAA8BK,EAAPL,EAElO,SAASO,UAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIN,UAAU,kEAAoEM,GAAeD,EAAStB,UAAYN,OAAO8B,OAAOD,GAAcA,EAAWvB,UAAW,CAAEyB,YAAa,CAAEb,MAAOU,EAAU/B,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe+B,IAAY7B,OAAOgC,eAAiBhC,OAAOgC,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAMje,IAAIK,iBAAmB,SAAUC,GAGhC,SAASD,IAGR,OAFAb,gBAAgBe,KAAMF,GAEfV,2BAA2BY,MAAOF,EAAiBD,WAAajC,OAAOiB,eAAeiB,IAAmBG,MAAMD,KAAME,YA0B7H,OA/BAX,UAAUO,EAgCTK,UAxBDjD,aAAa4C,EAAkB,CAAC,CAC/BhC,IAAK,eAKLgB,MAAO,SAAsBsB,EAAiBC,GAC7ClC,KAAK2B,EAAiB5B,UAAU2B,WAAajC,OAAOiB,eAAeiB,EAAiB5B,WAAY,eAAgB8B,MAAMhB,KAAKgB,KAAMI,EAAiBC,IAC9G,IAAhCD,EAA0B,UAC7BE,EAAE,SAAUA,EAAED,IAAiBE,KAAK,YAAY,KAGhD,CACFzC,IAAK,mBACLgB,MAAO,SAA0BsB,GAChC,IAAII,EAASrC,KAAK2B,EAAiB5B,UAAU2B,WAAajC,OAAOiB,eAAeiB,EAAiB5B,WAAY,mBAAoB8B,MAAMhB,KAAKgB,KAAMI,GAIlJ,OAHgC,MAA5BA,EAAgBK,WACnBD,EAAOC,SAAWL,EAAgBK,UAE5BD,MAIFV,EAhCe,GAqCnBY,wBAA0B,SAASA,IACtCzB,gBAAgBe,KAAMU,IAGvBA,wBAAwBxC,UAAYyC,QAAQzC,UAM5C,IAAI0C,gBAAkB,SAAUC,GAK/B,SAASD,EAAgBE,GACxB7B,gBAAgBe,KAAMY,GAEtB,IAAIG,EAAS3B,2BAA2BY,MAAOY,EAAgBf,WAAajC,OAAOiB,eAAe+B,IAAkB5B,KAAKgB,OAEzH,IAAKc,EACJ,MAAM,IAAIE,MAAM,qCAGjBD,EAAOE,aAAc,EACrBF,EAAOG,YAAcJ,EACrBC,EAAOI,YAAcL,EAAuB,aAAK,EACjDC,EAAOK,OAAS,KAEhBL,EAAOM,QAAU,IAAIvB,iBAAiB,CACrCwB,GAAMR,EAAe,IAAK,WAC1BS,MAAST,EAAkB,MAC3BU,SAAYV,EAAqB,SACjCW,QAAWX,EAAoB,SAAK,eAErCC,EAAOM,QAAQK,SAAWX,EAE1B,IAAIY,EAAgB,CAAC,OAAQ,SAAU,QAAS,QAAS,SAAU,WAAY,WAAY,WAAY,QAAS,WAAY,cAAe,iBAAkB,kBAAmB,YA0BhL,OAxBCb,EAAqB,UAAK,IAAIc,QAAQ,SAAUC,EAAaC,GAC7D,IAAIC,EAAUhB,EAAOM,QAAQW,WAAW,CACvCV,GAAMO,EAAgB,IAAK,UAAYC,EACvCP,MAASM,EAAmB,MAC5BI,UAAaJ,EAAuB,UACpCK,gBAAmBL,EAA6B,mBAGhDA,EAAkB,MAAK,IAAID,QAAQ,SAAUO,GACzCA,EAAY,QACfA,EAAY,OAAEP,QAAQ,SAAUQ,GAC/B,IAAIC,EAAOD,EAAY,MAAK,OAC5B,GAAIA,EAAc,SAAsC,IAAjCT,EAAcW,QAAQD,GAC5C,MAAM,IAAIrB,MAAM,mBAAqBoB,EAAU,IAAK,SAAW,oBAAsBC,EAAO,yBAG9FN,EAAQQ,OAAOJ,EAAY,SACjBA,EAAU,KACpBJ,EAAQS,QAAQL,EAAU,MAChBA,EAAmB,eAC7BJ,EAAQU,iBAAiBN,EAAmB,mBAIxCpB,EAyHR,OA7KAxB,UAAUqB,EA8KTF,yBArHDxD,aAAa0D,EAAiB,CAAC,CAC9B9C,IAAK,SACLgB,MAAO,WAQN,IAPA,IAAI4D,EAAS1C,KAET2C,EAA6B,EAAnBzC,UAAU3C,aAA+BoB,IAAjBuB,UAAU,GAAmBA,UAAU,GAAK,GAE9EY,EAAad,KAAKkB,YAElB0B,EAAoB,GACfC,EAAgB,EAAGC,EAAiBhC,EAAWiC,SAASxF,OAAQsF,EAAgBC,EAAgBD,IAAiB,CACzH,IAAId,EAAUjB,EAAWiC,SAASF,GAC9Bd,EAAQiB,YACsB,iBAAtBjB,EAAQiB,YAC6B,IAA3CjB,EAAQiB,UAAUV,QAAQ,aAC7BP,EAAQiB,UAAYxE,SAAS,UAAYuD,EAAQiB,UAA7BxE,GAEpBuD,EAAQiB,UAAYC,UAAUlB,EAAQiB,YAGxCJ,EAAkBM,KAAKnB,EAAQiB,UAAUjB,EAASjB,EAAYd,KAAKoB,OAAQuB,EAAQQ,QAGpF,IAAK,IAAIC,EAAY,EAAGC,EAAatB,EAAQuB,KAAK/F,OAAQ6F,EAAYC,EAAYD,IAAa,CAC9F,IAAIjB,EAAMJ,EAAQuB,KAAKF,GACnBjB,EAAIa,YACsB,iBAAlBb,EAAIa,YAC6B,IAAvCb,EAAIa,UAAUV,QAAQ,aACzBH,EAAIa,UAAYxE,SAAS,UAAY2D,EAAIa,UAAzBxE,GAEhB2D,EAAIa,UAAYC,UAAUd,EAAIa,YAGhCJ,EAAkBM,KAAKf,EAAIa,UAAUb,EAAKJ,EAASjB,EAAYd,KAAKoB,OAAQuB,EAAQQ,QAGrF,IAAK,IAAII,EAAc,EAAGC,EAAerB,EAAIsB,OAAOlG,OAAQgG,EAAcC,EAAcD,IAAe,CACtG,IAAInB,EAAQD,EAAIsB,OAAOF,GAEvB,GAAInB,EAAMsB,SAAWtB,EAAMuB,QAAwB,YAAdvB,EAAMC,KAAoB,CAC9D,IAAIvD,EAAQkB,KAAKoB,OAAOhD,IAAIgE,EAAMuB,QAClC,GAAI7E,GAI6B,IAHlBsD,EAAMsB,QAAQE,IAAI,SAAU9E,GACzC,OAAOA,EAAMA,OAASA,EAAM+E,OAEjBvB,QAAQxD,IACnBsD,EAAMsB,QAAQI,QAAQ,CAAED,KAAM/E,IAK7BsD,EAAMY,YACsB,iBAApBZ,EAAMY,YAC6B,IAAzCZ,EAAMY,UAAUV,QAAQ,aAC3BF,EAAMY,UAAYxE,SAAS,UAAY4D,EAAMY,UAA3BxE,GAElB4D,EAAMY,UAAYC,UAAUb,EAAMY,YAGpCJ,EAAkBM,KAAKd,EAAMY,UAAUZ,EAAOD,EAAKJ,EAASjB,EAAYd,KAAKoB,OAAQuB,EAAQQ,UAMjG,OAAOY,QAAQC,IAAIpB,GAAmBqB,KAAK,WAC1C9F,KAAKyC,EAAgB1C,UAAU2B,WAAajC,OAAOiB,eAAe+B,EAAgB1C,WAAY,SAAUwE,GAAQ1D,KAAK0D,EAAQC,GAG7H,IADA,IAAIuB,EAAqB,GAChBC,EAAiB,EAAGC,EAAkBtD,EAAWiC,SAASxF,OAAQ4G,EAAiBC,EAAiBD,IAAkB,CAC9H,IAAIE,EAAWvD,EAAWiC,SAASoB,GAC/BE,EAASC,aACuB,iBAAxBD,EAASC,aAC8B,IAA7CD,EAASC,WAAWhC,QAAQ,aAC/B+B,EAASC,WAAa9F,SAAS,UAAY6F,EAASC,WAA9B9F,GAEtB6F,EAASC,WAAarB,UAAUoB,EAASC,aAG3CJ,EAAmBhB,KAAKmB,EAASC,WAAWD,EAAUvD,EAAY4B,EAAOtB,OAAQuB,EAAQQ,QAG1F,IAAK,IAAIoB,EAAa,EAAGC,EAAcH,EAASf,KAAK/F,OAAQgH,EAAaC,EAAaD,IAAc,CACpG,IAAIE,EAAOJ,EAASf,KAAKiB,GACrBE,EAAKH,aACuB,iBAApBG,EAAKH,aAC8B,IAAzCG,EAAKH,WAAWhC,QAAQ,aAC3BmC,EAAKH,WAAa9F,SAAS,UAAYiG,EAAKH,WAA1B9F,GAElBiG,EAAKH,WAAarB,UAAUwB,EAAKH,aAGnCJ,EAAmBhB,KAAKuB,EAAKH,WAAWG,EAAMJ,EAAUvD,EAAY4B,EAAOtB,OAAQuB,EAAQQ,QAG5F,IAAK,IAAIuB,EAAe,EAAGC,EAAgBF,EAAKhB,OAAOlG,OAAQmH,EAAeC,EAAeD,IAAgB,CAC5G,IAAIE,EAASH,EAAKhB,OAAOiB,GACrBE,EAAON,aACuB,iBAAtBM,EAAON,aAC8B,IAA3CM,EAAON,WAAWhC,QAAQ,aAC7BsC,EAAON,WAAa9F,SAAS,UAAYoG,EAAON,WAA5B9F,GAEpBoG,EAAON,WAAarB,UAAU2B,EAAON,aAGvCJ,EAAmBhB,KAAK0B,EAAON,WAAWM,EAAQH,EAAMJ,EAAUvD,EAAY4B,EAAOtB,OAAQuB,EAAQQ,UAMzG,OAAOY,QAAQC,IAAIE,SAKftD,EA9Kc","file":"extended_cotform.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global cot_form CotForm getGlobal */\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar ExtendedCot_Form = function (_cot_form) {\n\t_inherits(ExtendedCot_Form, _cot_form);\n\n\tfunction ExtendedCot_Form() {\n\t\t_classCallCheck(this, ExtendedCot_Form);\n\n\t\treturn _possibleConstructorReturn(this, (ExtendedCot_Form.__proto__ || Object.getPrototypeOf(ExtendedCot_Form)).apply(this, arguments));\n\t}\n\n\t_createClass(ExtendedCot_Form, [{\n\t\tkey: 'addformfield',\n\n\n\t\t/* METHOD DEFINITION */\n\n\t\tvalue: function addformfield(fieldDefinition, fieldContainer) {\n\t\t\t_get(ExtendedCot_Form.prototype.__proto__ || Object.getPrototypeOf(ExtendedCot_Form.prototype), 'addformfield', this).call(this, fieldDefinition, fieldContainer);\n\t\t\tif (fieldDefinition['readOnly'] === true) {\n\t\t\t\t$(':input', $(fieldContainer)).prop('readonly', true);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'validatorOptions',\n\t\tvalue: function validatorOptions(fieldDefinition) {\n\t\t\tvar retVal = _get(ExtendedCot_Form.prototype.__proto__ || Object.getPrototypeOf(ExtendedCot_Form.prototype), 'validatorOptions', this).call(this, fieldDefinition);\n\t\t\tif (fieldDefinition.excluded != null) {\n\t\t\t\tretVal.excluded = fieldDefinition.excluded;\n\t\t\t}\n\t\t\treturn retVal;\n\t\t}\n\t}]);\n\n\treturn ExtendedCot_Form;\n}(cot_form);\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar AbstractExtendedCotForm = function AbstractExtendedCotForm() {\n\t_classCallCheck(this, AbstractExtendedCotForm);\n};\n\nAbstractExtendedCotForm.prototype = CotForm.prototype;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/* exported ExtendedCotForm */\n\nvar ExtendedCotForm = function (_AbstractExtendedCotF) {\n\t_inherits(ExtendedCotForm, _AbstractExtendedCotF);\n\n\t/* CONSTRUCTOR DEFINITION */\n\n\tfunction ExtendedCotForm(definition) {\n\t\t_classCallCheck(this, ExtendedCotForm);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, (ExtendedCotForm.__proto__ || Object.getPrototypeOf(ExtendedCotForm)).call(this));\n\n\t\tif (!definition) {\n\t\t\tthrow new Error('You must supply a form definition');\n\t\t}\n\n\t\t_this2._isRendered = false;\n\t\t_this2._definition = definition;\n\t\t_this2._useBinding = definition['useBinding'] || false;\n\t\t_this2._model = null;\n\n\t\t_this2.cotForm = new ExtendedCot_Form({\n\t\t\t'id': definition['id'] || 'new_form',\n\t\t\t'title': definition['title'],\n\t\t\t'rootPath': definition['rootPath'],\n\t\t\t'success': definition['success'] || function () {}\n\t\t});\n\t\t_this2.cotForm._cotForm = _this2;\n\n\t\tvar bindableTypes = ['text', 'number', 'phone', 'email', 'hidden', 'dropdown', 'textarea', 'checkbox', 'radio', 'password', 'multiselect', 'datetimepicker', 'daterangepicker', 'dropzone'];\n\n\t\t(definition['sections'] || []).forEach(function (sectionInfo, index) {\n\t\t\tvar section = _this2.cotForm.addSection({\n\t\t\t\t'id': sectionInfo['id'] || 'section' + index,\n\t\t\t\t'title': sectionInfo['title'],\n\t\t\t\t'className': sectionInfo['className'],\n\t\t\t\t'readSectionName': sectionInfo['readSectionName']\n\t\t\t});\n\n\t\t\t(sectionInfo['rows'] || []).forEach(function (row) {\n\t\t\t\tif (row['fields']) {\n\t\t\t\t\trow['fields'].forEach(function (field) {\n\t\t\t\t\t\tvar type = field['type'] || 'text';\n\t\t\t\t\t\tif (field['bindTo'] && bindableTypes.indexOf(type) === -1) {\n\t\t\t\t\t\t\tthrow new Error('Error in field ' + (field['id'] || 'no id') + ', fields of type ' + type + ' cannot use bindTo.');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tsection.addRow(row['fields']);\n\t\t\t\t} else if (row['grid']) {\n\t\t\t\t\tsection.addGrid(row['grid']);\n\t\t\t\t} else if (row['repeatControl']) {\n\t\t\t\t\tsection.addRepeatControl(row['repeatControl']);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn _this2;\n\t}\n\n\t// METHOD DEFINITION\n\n\t_createClass(ExtendedCotForm, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar definition = this._definition;\n\n\t\t\tvar preRenderPromises = [];\n\t\t\tfor (var sectionsIndex = 0, sectionsLength = definition.sections.length; sectionsIndex < sectionsLength; sectionsIndex++) {\n\t\t\t\tvar section = definition.sections[sectionsIndex];\n\t\t\t\tif (section.preRender) {\n\t\t\t\t\tif (typeof section.preRender === 'string') {\n\t\t\t\t\t\tif (section.preRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\tsection.preRender = Function('return ' + section.preRender)();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsection.preRender = getGlobal(section.preRender);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreRenderPromises.push(section.preRender(section, definition, this._model, options.view));\n\t\t\t\t}\n\n\t\t\t\tfor (var rowsIndex = 0, rowsLength = section.rows.length; rowsIndex < rowsLength; rowsIndex++) {\n\t\t\t\t\tvar row = section.rows[rowsIndex];\n\t\t\t\t\tif (row.preRender) {\n\t\t\t\t\t\tif (typeof row.preRender === 'string') {\n\t\t\t\t\t\t\tif (row.preRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\t\trow.preRender = Function('return ' + row.preRender)();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trow.preRender = getGlobal(row.preRender);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpreRenderPromises.push(row.preRender(row, section, definition, this._model, options.view));\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var fieldsIndex = 0, fieldsLength = row.fields.length; fieldsIndex < fieldsLength; fieldsIndex++) {\n\t\t\t\t\t\tvar field = row.fields[fieldsIndex];\n\n\t\t\t\t\t\tif (field.choices && field.bindTo && field.type != 'checkbox') {\n\t\t\t\t\t\t\tvar value = this._model.get(field.bindTo);\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tvar choices = field.choices.map(function (value) {\n\t\t\t\t\t\t\t\t\treturn value.value || value.text;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (choices.indexOf(value) === -1) {\n\t\t\t\t\t\t\t\t\tfield.choices.unshift({ text: value });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (field.preRender) {\n\t\t\t\t\t\t\tif (typeof field.preRender === 'string') {\n\t\t\t\t\t\t\t\tif (field.preRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\t\t\tfield.preRender = Function('return ' + field.preRender)();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfield.preRender = getGlobal(field.preRender);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpreRenderPromises.push(field.preRender(field, row, section, definition, this._model, options.view));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.all(preRenderPromises).then(function () {\n\t\t\t\t_get(ExtendedCotForm.prototype.__proto__ || Object.getPrototypeOf(ExtendedCotForm.prototype), 'render', _this3).call(_this3, options);\n\n\t\t\t\tvar postRenderPromises = [];\n\t\t\t\tfor (var _sectionsIndex = 0, _sectionsLength = definition.sections.length; _sectionsIndex < _sectionsLength; _sectionsIndex++) {\n\t\t\t\t\tvar _section = definition.sections[_sectionsIndex];\n\t\t\t\t\tif (_section.postRender) {\n\t\t\t\t\t\tif (typeof _section.postRender === 'string') {\n\t\t\t\t\t\t\tif (_section.postRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\t\t_section.postRender = Function('return ' + _section.postRender)();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_section.postRender = getGlobal(_section.postRender);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpostRenderPromises.push(_section.postRender(_section, definition, _this3._model, options.view));\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var _rowsIndex = 0, _rowsLength = _section.rows.length; _rowsIndex < _rowsLength; _rowsIndex++) {\n\t\t\t\t\t\tvar _row = _section.rows[_rowsIndex];\n\t\t\t\t\t\tif (_row.postRender) {\n\t\t\t\t\t\t\tif (typeof _row.postRender === 'string') {\n\t\t\t\t\t\t\t\tif (_row.postRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\t\t\t_row.postRender = Function('return ' + _row.postRender)();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_row.postRender = getGlobal(_row.postRender);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpostRenderPromises.push(_row.postRender(_row, _section, definition, _this3._model, options.view));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var _fieldsIndex = 0, _fieldsLength = _row.fields.length; _fieldsIndex < _fieldsLength; _fieldsIndex++) {\n\t\t\t\t\t\t\tvar _field = _row.fields[_fieldsIndex];\n\t\t\t\t\t\t\tif (_field.postRender) {\n\t\t\t\t\t\t\t\tif (typeof _field.postRender === 'string') {\n\t\t\t\t\t\t\t\t\tif (_field.postRender.indexOf('function(') === 0) {\n\t\t\t\t\t\t\t\t\t\t_field.postRender = Function('return ' + _field.postRender)();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t_field.postRender = getGlobal(_field.postRender);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpostRenderPromises.push(_field.postRender(_field, _row, _section, definition, _this3._model, options.view));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all(postRenderPromises);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ExtendedCotForm;\n}(AbstractExtendedCotForm);"]}