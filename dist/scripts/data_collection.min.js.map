{"version":3,"sources":["scripts/data_collection.min.js"],"names":["DataCollection","Backbone","Collection","extend","syncNeedsLogin","fetchAll","fetchParameters","$count","model","_len","arguments","length","arg","Array","_key","Function","prototype","bind","apply","DataModel","concat","totalRecords","fetch","_this","this","options","undefined","$","_","result","queryString","queryObjectToString","join","call","then","$skip","$top","parse","response","isArray","hasOwnProperty"],"mappings":"AAAA,aAKA,IAAIA,eAAiBC,SAASC,WAAWC,OAAO,CAI/CC,gBAAgB,EAEhBC,UAAU,EAEVC,gBAAiB,CAChBC,QAAQ,GAGTC,MAAO,WACN,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAMC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC3EF,EAAIE,GAAQJ,UAAUI,GAGvB,OAAO,IAAKC,SAASC,UAAUC,KAAKC,MAAMC,UAAW,CAAC,MAAMC,OAAOR,MAGpES,aAAc,KAIdC,MAAO,WACN,IAAIC,EAAQC,KAERC,EAA6B,EAAnBf,UAAUC,aAA+Be,IAAjBhB,UAAU,GAAmBA,UAAU,GAAK,GAElFc,KAAKH,aAAe,KAEpB,IAAIf,EAAkBqB,EAAExB,OAAO,GAAIyB,EAAEC,OAAOL,KAAM,mBAAoBI,EAAEC,OAAOJ,EAAS,oBACpFpB,EAAWuB,EAAEC,OAAOJ,EAAS,WAAYG,EAAEC,OAAOL,KAAM,YAAY,IACpEnB,IACHC,EAAwB,QAAI,EAC5BA,EAAuB,MAAI,EAC3BA,EAAsB,KAAI,GAG3B,IAAIwB,EAAcC,oBAAoBzB,GAGtC,OAFAmB,EAAa,IAAI,CAACG,EAAEC,OAAOL,KAAM,OAAQM,GAAaE,KAAK,KAEpD/B,SAASC,WAAWc,UAAUM,MAAMW,KAAKT,KAAMC,GAASS,KAAK,WACnE,GAAI7B,GAAiC,EAArBkB,EAAMF,eAAkD,IAA9Bf,EAAwB,QAAoC,MAAtBiB,EAAMF,aACrF,OAAOE,EAAMD,MAAMK,EAAExB,OAAOsB,EAAS,CACpCnB,gBAAiBqB,EAAExB,OAAOyB,EAAEC,OAAOJ,EAAS,mBAAoB,CAC/DU,MAAO,EACPC,KAAMb,EAAMF,qBAOjBgB,MAAO,SAAeC,EAAUb,GAW/B,OAVIa,IAAazB,MAAM0B,QAAQD,KAC1BA,EAAS,kBACZd,KAAKH,aAAeiB,EAAS,kBAGzBzB,MAAM0B,QAAQD,IAAaA,EAASE,eAAe,WACvDF,EAAWA,EAAgB,QAItBrC,SAASC,WAAWc,UAAUqB,MAAMJ,KAAKT,KAAMc,EAAUb","file":"data_collection.min.js","sourcesContent":["'use strict';\n\n/* global DataModel queryObjectToString */\n\n/* exported DataCollection */\nvar DataCollection = Backbone.Collection.extend({\n\n\t// PROPERTY DEFINITION\n\n\tsyncNeedsLogin: false,\n\n\tfetchAll: false,\n\n\tfetchParameters: {\n\t\t$count: false\n\t},\n\n\tmodel: function model() {\n\t\tfor (var _len = arguments.length, arg = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targ[_key] = arguments[_key];\n\t\t}\n\n\t\treturn new (Function.prototype.bind.apply(DataModel, [null].concat(arg)))();\n\t},\n\n\ttotalRecords: null,\n\n\t// METHOD DEFINITION\n\n\tfetch: function fetch() {\n\t\tvar _this = this;\n\n\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\tthis.totalRecords = null;\n\n\t\tvar fetchParameters = $.extend({}, _.result(this, 'fetchParameters'), _.result(options, 'fetchParameters'));\n\t\tvar fetchAll = _.result(options, 'fetchAll', _.result(this, 'fetchAll', false));\n\t\tif (fetchAll) {\n\t\t\tfetchParameters['$count'] = true;\n\t\t\tfetchParameters['$skip'] = 0;\n\t\t\tfetchParameters['$top'] = 1;\n\t\t}\n\n\t\tvar queryString = queryObjectToString(fetchParameters);\n\t\toptions['url'] = [_.result(this, 'url'), queryString].join('?');\n\n\t\treturn Backbone.Collection.prototype.fetch.call(this, options).then(function () {\n\t\t\tif (fetchAll && _this.totalRecords > 1 && fetchParameters['$count'] === true && _this.totalRecords != null) {\n\t\t\t\treturn _this.fetch($.extend(options, {\n\t\t\t\t\tfetchParameters: $.extend(_.result(options, 'fetchParameters'), {\n\t\t\t\t\t\t$skip: 0,\n\t\t\t\t\t\t$top: _this.totalRecords\n\t\t\t\t\t})\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t},\n\n\tparse: function parse(response, options) {\n\t\tif (response && !Array.isArray(response)) {\n\t\t\tif (response['@odata.count']) {\n\t\t\t\tthis.totalRecords = response['@odata.count'];\n\t\t\t}\n\n\t\t\tif (!Array.isArray(response) && response.hasOwnProperty('value')) {\n\t\t\t\tresponse = response['value'];\n\t\t\t}\n\t\t}\n\n\t\treturn Backbone.Collection.prototype.parse.call(this, response, options);\n\t}\n});"]}