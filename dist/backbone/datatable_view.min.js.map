{"version":3,"sources":["backbone/datatable_view.min.js"],"names":["DataTableView","Backbone","View","extend","className","configuration","columns","id","dataTable","template","_","reload","callback","resetPaging","arguments","length","undefined","this","ajax","remove","removeDataTable","prototype","call","destroy","render","_this","result","Promise","resolve","then","preRenderPromises","index","column","push","all","$el","html","view","dt_configuration","$","data","fetchParameters","$count","$filter","filter","value","searchable","search","map","join","$orderby","order","dir","start","complete","collection","toJSON","transform","draw","recordsTotal","totalRecords","recordsFiltered","fetch","find","DataTable","postRenderPromises","events","key","delegateEvents","buttonsConfiguration","buttons","exportOptions","dom","columnFilters","booleanEquals","serverSide","dtColumn","dataSrc","toLowerCase","numberEquals","isNaN","numberBetween","indexOf","nums","split","searches","val","stringEquals","stringContains","words","i","l","dateEquals","moment","isValid","set","hour","minute","second","millisecond","format","end","add","hours","dateBetween","dates","title","preRenders","searchFooterFactory","columnFilter","choices","url","fetchConfigurations","footerHtml","cid","text","choice","event","$input","currentTarget","closest"],"mappings":"AAAA,aAKA,IAAIA,cAAgBC,SAASC,KAAKC,OAAO,CAIvCC,UAAW,gBAEXC,cAAe,CACbC,QAAS,WACP,MAAO,CAACN,cAAcM,QAAQC,MAIlCC,UAAW,KAEXC,SAAUC,EAAED,SAAS,+2BAIrBE,OAAQ,SAAgBC,GACtB,IAAIC,EAAiC,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,IAAmBA,UAAU,GAE7EG,KAAKT,WACPS,KAAKT,UAAUU,KAAKP,OAAOC,EAAUC,IAIzCM,OAAQ,WACNF,KAAKG,kBACLnB,SAASC,KAAKmB,UAAUF,OAAOG,KAAKL,OAGtCG,gBAAiB,WACXH,KAAKT,WACPS,KAAKT,UAAUe,WAInBC,OAAQ,WACN,IAAIC,EAAQR,KAERZ,EAAgBK,EAAEgB,OAAOT,KAAM,iBAC/BX,EAAUD,EAAcC,QAAUI,EAAEgB,OAAOrB,EAAe,WAE9D,OAAOsB,QAAQC,QAAQX,KAAKG,mBAAmBS,KAAK,WAIlD,IADA,IAAIC,EAAoB,GACfC,EAAQ,EAAGhB,EAAST,EAAQS,OAAQgB,EAAQhB,EAAQgB,IAAS,CACpE,IAAIC,EAAS1B,EAAQyB,GACjBC,EAAkB,WACpBF,EAAkBG,KAAKD,EAAkB,UAAEA,EAAQ3B,EAAeoB,IAItE,OAAOE,QAAQO,IAAIJ,KAClBD,KAAK,WAGNJ,EAAMU,IAAIC,KAAKX,EAAMhB,SAAS,CAAEJ,cAAeA,EAAegC,KAAMZ,OACnEI,KAAK,WAGN,IAAIS,EAAmBC,EAAEpC,OAAO,GAAIE,IACA,IAAhCA,EAA0B,WAC5BkC,EAAEpC,OAAOmC,EAAkB,CACzBpB,KAAM,SAAcsB,EAAM5B,GAKxB,IAAI6B,EAAkB,CAGtBC,QAA4B,GAGxBC,EAAUH,EAAKlC,QAAQsC,OAAO,SAAUC,GAC1C,OAAOA,EAAMC,YAAcD,EAAME,QAAUF,EAAME,OAAOF,QACvDG,IAAI,SAAUH,GACf,OAAOA,EAAME,OAAOF,QACnBI,KAAK,SACJN,IACFF,EAAyB,QAAIE,GAI/B,IAAIO,EAAWV,EAAKW,MAAMH,IAAI,SAAUH,GACtC,OAAOL,EAAKlC,QAAQuC,EAAMb,QAAQQ,KAAO,IAAMK,EAAMO,MACpDH,KAAK,KACJC,IACFT,EAA0B,SAAIS,GAI5BV,EAAKO,QAAUP,EAAKO,OAAOF,QAC7BJ,EAAyB,QAAI,IAAMD,EAAKO,OAAOF,MAAQ,KAOzDJ,EAAuB,MAAID,EAAKa,MAGhCZ,EAAsB,KAAID,EAAKzB,OAE/B,IAAIuC,EAAW,WACb1C,EAAS,CACP4B,KAAMf,EAAM8B,WAAWC,OAAO,CAAEC,WAAW,IAC3CC,KAAMlB,EAAKkB,KACXC,aAAclC,EAAM8B,WAAWK,cAAgB,EAC/CC,gBAAiBpC,EAAM8B,WAAWK,cAAgB,KAItDnC,EAAM8B,WAAWO,MAAM,CACrBrB,gBAAiBA,IAChBZ,KAAKyB,EAAUA,MAItBf,EAAEpC,OAAOmC,EAAkB,CACzBE,KAAMf,EAAM8B,WAAWC,OAAO,CAAEC,WAAW,MAI/ChC,EAAMjB,UAAYiB,EAAMU,IAAI4B,KAAK,SAASC,UAAU1B,KACnDT,KAAK,WAIN,IADA,IAAIoC,EAAqB,GAChBlC,EAAQ,EAAGhB,EAAST,EAAQS,OAAQgB,EAAQhB,EAAQgB,IAAS,CAEpE,IAAIC,EAAS1B,EAAQyB,GAKrB,GAJIC,EAAmB,YACrBiC,EAAmBhC,KAAKD,EAAmB,WAAEA,EAAQP,EAAMpB,cAAeoB,IAGpD,MAApBO,EAAe,OAAW,CACR,MAAhBP,EAAMyC,SACRzC,EAAMyC,OAAS,IAGjB,IAAIA,EAASxD,EAAEgB,OAAOa,EAAEpC,OAAO,CAAEkC,KAAMZ,GAASO,GAAS,UACzD,IAAK,IAAImC,KAAOD,EACdzC,EAAMyC,OAAOC,GAAOD,EAAOC,IAOjC,OAFA1C,EAAM2C,iBAECzC,QAAQO,IAAI+B,OAGtB,CAMDI,qBAAsB,CACpBC,QAAS,CAAC,CACRnE,OAAQ,YACRoE,cAAe,CAAEjE,QAAS,sCACzB,CACDH,OAAQ,WACRoE,cAAe,CAAEjE,QAAS,sCACzB,CACDH,OAAQ,aACRoE,cAAe,CAAEjE,QAAS,sCACzB,CACDH,OAAQ,WACRoE,cAAe,CAAEjE,QAAS,sCACzB,CACDH,OAAQ,QACRoE,cAAe,CAAEjE,QAAS,uCAG5BkE,IAAK,iHAOPC,cAAe,CACbC,cAAiB,SAAuBC,EAAY9B,EAAO+B,GACzD,IAAI7B,EAAS,GAETF,IACE8B,EACY,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,WACX,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,WACG,SAAxBhC,EAAMiC,eAAoD,UAAxBjC,EAAMiC,gBACjD/B,EAAS6B,EAASC,UAAY,OAAShC,EAAMiC,eAG/C/B,EAASF,GAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAIbqB,aAAgB,SAAsBJ,EAAY9B,EAAO+B,GACvD,IAAI7B,EAAS,GAETF,IACE8B,EACY,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,WACX,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,WACpBG,MAAMnC,KAChBE,EAAS6B,EAASC,UAAY,OAAShC,EAAMiC,eAG/C/B,EAASF,GAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAIbuB,cAAiB,SAAuBN,EAAY9B,EAAO+B,GACzD,IAAI7B,EAAS,GAEb,GAAIF,EACF,GAAI8B,GACF,GAAc,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,gBACzB,GAAc,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,gBACzB,IAA2C,IAAvChC,EAAMiC,cAAcI,QAAQ,MAAc,CACnD,IAAIC,EAAOtC,EAAMiC,cAAcM,MAAM,MACrC,IAAKJ,MAAMG,EAAK,MAAQH,MAAMG,EAAK,IAAK,CACtC,IAAIE,EAAW,GACVL,MAAMG,EAAK,IAGdE,EAAS,GAAK,KAFdA,EAAS,GAAKT,EAASC,UAAY,OAASM,EAAK,GAI9CH,MAAMG,EAAK,IAGdE,EAAS,GAAK,KAFdA,EAAS,GAAKT,EAASC,UAAY,OAASM,EAAK,GAInDpC,EAASsC,EAASzC,OAAO,SAAU0C,GACjC,OAAOA,IACNrC,KAAK,gBAIZF,EAASF,EAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAIb6B,aAAgB,SAAsBZ,EAAY9B,EAAO+B,GACvD,IAAI7B,EAAS,GAETF,IAGEE,EAFA4B,EACY,WAAV9B,EACO+B,EAASC,UAAY,WACX,cAAVhC,EACA+B,EAASC,UAAY,WAErB,WAAaD,EAASC,UAAY,SAAYhC,EAAMiC,cAAgB,IAGtEjC,GAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAIb8B,eAAkB,SAAwBb,EAAY9B,EAAO+B,GAC3D,IAAI7B,EAAS,GAEb,GAAIF,EACF,GAAI8B,EACF,GAAc,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,gBACzB,GAAc,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,eACzB,CAGL,IAFA,IAAIY,EAAQ5C,EAAMiC,cAAcM,MAAM,KAClCC,EAAW,GACNK,EAAI,EAAGC,EAAIF,EAAM1E,OAAQ2E,EAAIC,EAAGD,IACvCL,EAASpD,KAAK,oBAAsB2C,EAASC,UAAY,MAASY,EAAMC,GAAK,MAE/E3C,EAASsC,EAASpC,KAAK,cAGzBF,EAASF,EAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAKbkC,WAAc,SAAoBjB,EAAY9B,EAAO+B,GACnD,IAAI7B,EAAS,GAEb,GAAIF,EACF,GAAI8B,GACF,GAAc,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,gBACzB,GAAc,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,gBACzB,GAAIgB,OAAOhD,EAAO,KAAKiD,UAAW,CACvC,IAAIzC,EAAQwC,OAAOhD,EAAO,KAAKkD,IAAI,CACjCC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,IACZC,SACCC,EAAMR,OAAOxC,GAAOiD,IAAI,CAC1BC,MAAO,KACNH,SACHrD,EAAS6B,EAASC,UAAY,OAASxB,EAAQ,QAAUuB,EAASC,UAAY,OAASwB,QAGzFtD,EAASF,EAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,SAIb8C,YAAe,SAAqB7B,EAAY9B,EAAO+B,GACrD,IAAI7B,EAAS,GAEb,GAAIF,EACF,GAAI8B,GACF,GAAc,WAAV9B,EACFE,EAAS6B,EAASC,UAAY,gBACzB,GAAc,cAAVhC,EACTE,EAAS6B,EAASC,UAAY,gBACzB,IAA2C,IAAvChC,EAAMiC,cAAcI,QAAQ,MAAc,CACnD,IAAIuB,EAAQ5D,EAAMiC,cAAcM,MAAM,MACtC,GAAIS,OAAOY,EAAM,IAAIX,WAAaD,OAAOY,EAAM,IAAIX,UAAW,CAC5D,IAAIT,EAAW,GACf,GAAIQ,OAAOY,EAAM,IAAIX,UAAW,CAC9B,IAAIzC,EAAQwC,OAAOY,EAAM,IAAIV,IAAI,CAC/BC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,IACZC,SACHf,EAAS,GAAKT,EAASC,UAAY,OAASxB,OAE5CgC,EAAS,GAAK,KAEhB,GAAIQ,OAAOY,EAAM,IAAIX,UAAW,CAC9B,IAAIO,EAAMR,OAAOY,EAAM,IAAIV,IAAI,CAC7BC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,IACZG,IAAI,CACLC,MAAO,KACNH,SACHf,EAAS,GAAKT,EAASC,UAAY,OAASwB,OAE5ChB,EAAS,GAAK,KAEhBtC,EAASsC,EAASzC,OAAO,SAAU0C,GACjC,OAAOA,IACNrC,KAAK,gBAIZF,EAASF,EAITE,IAAW6B,EAAS7B,WACtB6B,EAAS7B,OAAOA,GAChB6B,EAASlB,UASfpD,QAAS,CACPC,GAAM,CACJiC,KAAM,KACNkE,MAAO,OAQXC,WAAY,CACVC,oBAAuB,SAA6BC,GAIlD,MAH4B,iBAAjBA,IACTA,EAAe7G,cAAcyE,cAAcoC,IAEtC,SAAU7E,EAAQ3B,EAAegC,GACtC,OAAOV,QAAQC,UAAUC,KAAK,WAC5B,GAAIG,EAAO8E,SAAqC,iBAAnB9E,EAAO8E,QAAsB,CACxD,IAAIC,EAAM/E,EAAO8E,QAEjB,OADA9E,EAAO8E,QAAU,GACVE,oBAAoBD,EAAK/E,EAAO8E,YAExCjF,KAAK,WACFG,EAAO8E,QACT9E,EAAOiF,WAAa,6CAA+CjF,EAAOQ,KAAO,IAAMH,EAAK6E,IAAM,aAAelF,EAAO0E,OAAS1E,EAAOQ,MAAQ,0DAA4DR,EAAOQ,KAAO,IAAMH,EAAK6E,IAAM,sBAAmD,MAA3BlF,EAAO8E,QAAQ,GAAGjE,MAA2C,IAA3Bb,EAAO8E,QAAQ,GAAGjE,MAAc,6BAA+B,GAA+B,IAA1Bb,EAAO8E,QAAQ,GAAGK,KAAa,6BAA+B,IAAM,mBAAqBnF,EAAO8E,QAAQ9D,IAAI,SAAUoE,GAC7d,MAAO,mBAAsC,OAAjBA,EAAOvE,MAAiBuE,EAAOvE,MAAQuE,EAAOD,MAAQ,KAAOC,EAAOD,KAAO,cACtGlE,KAAK,IAAM,sCAEdjB,EAAOiF,WAAa,6CAA+CjF,EAAOQ,KAAO,IAAMH,EAAK6E,IAAM,aAAelF,EAAO0E,OAAS1E,EAAOQ,MAAQ,qEAAuER,EAAOQ,KAAO,IAAMH,EAAK6E,IAAM,iBAGnPlF,EAAOkC,SACVlC,EAAOkC,OAAS,IAGlBlC,EAAOkC,OAAO,WAAalC,EAAOQ,KAAO,IAAMH,EAAK6E,KAAO,SAAUG,GACnE,IAAIC,EAAS/E,EAAE8E,EAAME,eACrBV,EAAaxG,EAAcsE,WAAY2C,EAAOhC,MAAOjD,EAAK7B,UAAUwB,QAAQsF,EAAOE,QAAQ,MAAMhF,KAAK,YAExGR,EAAOkC,OAAO,UAAYlC,EAAOQ,KAAO,IAAMH,EAAK6E,KAAO,SAAUG,GAClE,IAAIC,EAAS/E,EAAE8E,EAAME,eACrBV,EAAaxG,EAAcsE,WAAY2C,EAAOhC,MAAOjD,EAAK7B,UAAUwB,QAAQsF,EAAOE,QAAQ,MAAMhF,KAAK","file":"datatable_view.min.js","sourcesContent":["'use strict';\n\n/* global moment fetchConfigurations */\n\n/* exported DataTableView */\nvar DataTableView = Backbone.View.extend({\n\n  // PROPERTY DEFINITION\n\n  className: 'DataTableView',\n\n  configuration: {\n    columns: function columns() {\n      return [DataTableView.columns.id];\n    }\n  },\n\n  dataTable: null,\n\n  template: _.template('\\n    <div class=\"row\">\\n      <div class=\"col-xs-12\">\\n        <table width=\"100%\" class=\"table table-bordered\">\\n          <thead>\\n            <tr>\\n            <% for (var index = 0, length = configuration.columns.length; index < length; index++) { %>\\n              <th><%- _.result(configuration.columns[index], \\'title\\') || _.result(configuration.columns[index], \\'data\\', \\'\\') %></th>\\n            <% } %>\\n            </tr>\\n          </thead>\\n          <tbody></tbody>\\n          <tfoot>\\n            <tr>\\n            <% for (var index = 0, length = configuration.columns.length; index < length; index++) { %>\\n              <td data-index=\"<%- index %>\"><%= _.result($.extend({ view: view }, configuration.columns[index]), \\'footerHtml\\', \\'\\') %></td>\\n            <% } %>\\n            </tr>\\n          </tfoot>\\n        </table>\\n      </div>\\n    </div>\\n  '),\n\n  // METHOD DEFINITION\n\n  reload: function reload(callback) {\n    var resetPaging = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (this.dataTable) {\n      this.dataTable.ajax.reload(callback, resetPaging);\n    }\n  },\n\n  remove: function remove() {\n    this.removeDataTable();\n    Backbone.View.prototype.remove.call(this);\n  },\n\n  removeDataTable: function removeDataTable() {\n    if (this.dataTable) {\n      this.dataTable.destroy();\n    }\n  },\n\n  render: function render() {\n    var _this = this;\n\n    var configuration = _.result(this, 'configuration');\n    var columns = configuration.columns = _.result(configuration, 'columns');\n\n    return Promise.resolve(this.removeDataTable()).then(function () {\n\n      // Pre Render.\n      var preRenderPromises = [];\n      for (var index = 0, length = columns.length; index < length; index++) {\n        var column = columns[index];\n        if (column['preRender']) {\n          preRenderPromises.push(column['preRender'](column, configuration, _this));\n        }\n      }\n\n      return Promise.all(preRenderPromises);\n    }).then(function () {\n\n      // Render Template.\n      _this.$el.html(_this.template({ configuration: configuration, view: _this }));\n    }).then(function () {\n\n      // Render DataTable.\n      var dt_configuration = $.extend({}, configuration);\n      if (configuration['serverSide'] === true) {\n        $.extend(dt_configuration, {\n          ajax: function ajax(data, callback) {\n\n            // TODO.\n            // const defaultFetchParameters = _.result(this.collection, 'fetchParameters');\n\n            var fetchParameters = {};\n\n            // $count\n            fetchParameters['$count'] = true;\n\n            // $filter\n            var $filter = data.columns.filter(function (value) {\n              return value.searchable && value.search && value.search.value;\n            }).map(function (value) {\n              return value.search.value;\n            }).join(' and ');\n            if ($filter) {\n              fetchParameters['$filter'] = $filter;\n            }\n\n            // $orderby\n            var $orderby = data.order.map(function (value) {\n              return data.columns[value.column].data + ' ' + value.dir;\n            }).join(',');\n            if ($orderby) {\n              fetchParameters['$orderby'] = $orderby;\n            }\n\n            // $search\n            if (data.search && data.search.value) {\n              fetchParameters['$search'] = '\"' + data.search.value + '\"';\n            }\n\n            // $select\n            // NOTE: $select is problematic. C3API does not like undefined columns.\n\n            // $skip\n            fetchParameters['$skip'] = data.start;\n\n            // $top\n            fetchParameters['$top'] = data.length;\n\n            var complete = function complete() {\n              callback({\n                data: _this.collection.toJSON({ transform: false }),\n                draw: data.draw,\n                recordsTotal: _this.collection.totalRecords || 0,\n                recordsFiltered: _this.collection.totalRecords || 0\n              });\n            };\n\n            _this.collection.fetch({\n              fetchParameters: fetchParameters\n            }).then(complete, complete);\n          }\n        });\n      } else {\n        $.extend(dt_configuration, {\n          data: _this.collection.toJSON({ transform: false })\n        });\n      }\n\n      _this.dataTable = _this.$el.find('table').DataTable(dt_configuration);\n    }).then(function () {\n\n      // Post Render and Event.\n      var postRenderPromises = [];\n      for (var index = 0, length = columns.length; index < length; index++) {\n\n        var column = columns[index];\n        if (column['postRender']) {\n          postRenderPromises.push(column['postRender'](column, _this.configuration, _this));\n        }\n\n        if (column['events'] != null) {\n          if (_this.events == null) {\n            _this.events = {};\n          }\n\n          var events = _.result($.extend({ view: _this }, column), 'events');\n          for (var key in events) {\n            _this.events[key] = events[key];\n          }\n        }\n      }\n\n      _this.delegateEvents();\n\n      return Promise.all(postRenderPromises);\n    });\n  }\n}, {\n\n  //////////////////////////////////////////////////////////////////////////////\n  // BUTTONS CONFIGURATION\n  //////////////////////////////////////////////////////////////////////////////\n\n  buttonsConfiguration: {\n    buttons: [{\n      extend: 'copyHtml5',\n      exportOptions: { columns: ':visible:not(.excludeFromButtons)' }\n    }, {\n      extend: 'csvHtml5',\n      exportOptions: { columns: ':visible:not(.excludeFromButtons)' }\n    }, {\n      extend: 'excelHtml5',\n      exportOptions: { columns: ':visible:not(.excludeFromButtons)' }\n    }, {\n      extend: 'pdfHtml5',\n      exportOptions: { columns: ':visible:not(.excludeFromButtons)' }\n    }, {\n      extend: 'print',\n      exportOptions: { columns: ':visible:not(.excludeFromButtons)' }\n    }],\n\n    dom: '<\\'row\\'<\\'col-sm-6\\'l><\\'col-sm-6\\'f>><\\'row\\'<\\'col-sm-12\\'<\\'table-responsive\\'tr>>><\\'row\\'<\\'col-sm-5\\'i><\\'col-sm-7\\'p>>B'\n  },\n\n  //////////////////////////////////////////////////////////////////////////////\n  // COLUMN FILTERS\n  //////////////////////////////////////////////////////////////////////////////\n\n  columnFilters: {\n    'booleanEquals': function booleanEquals(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else if (value.toLowerCase() === 'true' || value.toLowerCase() === 'false') {\n            search = dtColumn.dataSrc() + ' eq ' + value.toLowerCase();\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n\n    'numberEquals': function numberEquals(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else if (!isNaN(value)) {\n            search = dtColumn.dataSrc() + ' eq ' + value.toLowerCase();\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n\n    'numberBetween': function numberBetween(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else if (value.toLowerCase().indexOf('to') !== -1) {\n            var nums = value.toLowerCase().split('to');\n            if (!isNaN(nums[0]) || !isNaN(nums[0])) {\n              var searches = [];\n              if (!isNaN(nums[0])) {\n                searches[0] = dtColumn.dataSrc() + ' ge ' + nums[0];\n              } else {\n                searches[0] = null;\n              }\n              if (!isNaN(nums[1])) {\n                searches[1] = dtColumn.dataSrc() + ' le ' + nums[1];\n              } else {\n                searches[1] = null;\n              }\n              search = searches.filter(function (val) {\n                return val;\n              }).join(' and ');\n            }\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n\n    'stringEquals': function stringEquals(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else {\n            search = 'tolower(' + dtColumn.dataSrc() + ') eq \\'' + value.toLowerCase() + '\\'';\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n\n    'stringContains': function stringContains(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else {\n            var words = value.toLowerCase().split(' ');\n            var searches = [];\n            for (var i = 0, l = words.length; i < l; i++) {\n              searches.push('contains(tolower(' + dtColumn.dataSrc() + '),\\'' + words[i] + '\\')');\n            }\n            search = searches.join(' and ');\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n    // },\n\n    'dateEquals': function dateEquals(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else if (moment(value, 'l').isValid()) {\n            var start = moment(value, 'l').set({\n              hour: 0,\n              minute: 0,\n              second: 0,\n              millisecond: 0\n            }).format();\n            var end = moment(start).add({\n              hours: 24\n            }).format();\n            search = dtColumn.dataSrc() + ' ge ' + start + ' and ' + dtColumn.dataSrc() + ' le ' + end;\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    },\n\n    'dateBetween': function dateBetween(serverSide, value, dtColumn) {\n      var search = '';\n\n      if (value) {\n        if (serverSide) {\n          if (value === '$EMPTY') {\n            search = dtColumn.dataSrc() + ' eq null';\n          } else if (value === '$NOTEMPTY') {\n            search = dtColumn.dataSrc() + ' ne null';\n          } else if (value.toLowerCase().indexOf('to') !== -1) {\n            var dates = value.toLowerCase().split('to');\n            if (moment(dates[0]).isValid() || moment(dates[1]).isValid()) {\n              var searches = [];\n              if (moment(dates[0]).isValid()) {\n                var start = moment(dates[0]).set({\n                  hour: 0,\n                  minute: 0,\n                  second: 0,\n                  millisecond: 0\n                }).format();\n                searches[0] = dtColumn.dataSrc() + ' ge ' + start;\n              } else {\n                searches[0] = null;\n              }\n              if (moment(dates[1]).isValid()) {\n                var end = moment(dates[1]).set({\n                  hour: 0,\n                  minute: 0,\n                  second: 0,\n                  millisecond: 0\n                }).add({\n                  hours: 24\n                }).format();\n                searches[1] = dtColumn.dataSrc() + ' le ' + end;\n              } else {\n                searches[1] = null;\n              }\n              search = searches.filter(function (val) {\n                return val;\n              }).join(' and ');\n            }\n          }\n        } else {\n          search = value;\n        }\n      }\n\n      if (search !== dtColumn.search()) {\n        dtColumn.search(search);\n        dtColumn.draw();\n      }\n    }\n  },\n\n  //////////////////////////////////////////////////////////////////////////////\n  // COLUMNS\n  //////////////////////////////////////////////////////////////////////////////\n\n  columns: {\n    'id': {\n      data: 'id',\n      title: 'ID'\n    }\n  },\n\n  //////////////////////////////////////////////////////////////////////////////\n  // PRE RENDERS\n  //////////////////////////////////////////////////////////////////////////////\n\n  preRenders: {\n    'searchFooterFactory': function searchFooterFactory(columnFilter) {\n      if (typeof columnFilter === 'string') {\n        columnFilter = DataTableView.columnFilters[columnFilter];\n      }\n      return function (column, configuration, view) {\n        return Promise.resolve().then(function () {\n          if (column.choices && typeof column.choices === 'string') {\n            var url = column.choices;\n            column.choices = [];\n            return fetchConfigurations(url, column.choices);\n          }\n        }).then(function () {\n          if (column.choices) {\n            column.footerHtml = '\\n            <label class=\"sr-only\" for=\"' + column.data + '_' + view.cid + '\">Search ' + (column.title || column.data) + '</label>\\n            <select class=\"form-control\" id=\"' + column.data + '_' + view.cid + '\">\\n              ' + (column.choices[0].value != null ? column.choices[0].value != '' ? '<option value=\"\"></option>' : '' : column.choices[0].text != '' ? '<option value=\"\"></option>' : '') + '\\n              ' + column.choices.map(function (choice) {\n              return '<option value=\"' + (choice.value !== null ? choice.value : choice.text) + '\">' + choice.text + '</option>';\n            }).join('') + '\\n            </select>\\n          ';\n          } else {\n            column.footerHtml = '\\n            <label class=\"sr-only\" for=\"' + column.data + '_' + view.cid + '\">Search ' + (column.title || column.data) + '</label>\\n            <input type=\"text\" class=\"form-control\" id=\"' + column.data + '_' + view.cid + '\">\\n          ';\n          }\n\n          if (!column.events) {\n            column.events = {};\n          }\n\n          column.events['change #' + column.data + '_' + view.cid] = function (event) {\n            var $input = $(event.currentTarget);\n            columnFilter(configuration.serverSide, $input.val(), view.dataTable.column(+$input.closest('td').data('index')));\n          };\n          column.events['keyup #' + column.data + '_' + view.cid] = function (event) {\n            var $input = $(event.currentTarget);\n            columnFilter(configuration.serverSide, $input.val(), view.dataTable.column(+$input.closest('td').data('index')));\n          };\n        });\n      };\n    }\n  }\n});"]}