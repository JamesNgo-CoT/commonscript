{"version":3,"sources":["backbone/base_router.min.js"],"names":["BaseRouter","Backbone","Router","extend","$containers","app","commonModel","lastFragment","routes","*default","views","defautRoute","this","navigate","trigger","route","_route","name","callback","_this","oldCallback","newCallback","_len","arguments","length","args","Array","_key","history","fragment","call","apply","concat","prototype"],"mappings":"AAAA,aAGA,IAAIA,WAAaC,SAASC,OAAOC,OAAO,CAItCC,YAAa,GAEbC,IAAK,KAELC,YAAa,KAEbC,aAAc,KAEdC,OAAQ,CACNC,WAAY,eAGdC,MAAO,GAIPC,YAAa,WACPC,KAAKL,cACPK,KAAKC,SAASD,KAAKL,aAAc,CAAEO,SAAS,KAIhDC,MAAO,SAAeC,EAAQC,EAAMC,GAClC,IAAIC,EAAQP,KAERQ,EAAcF,GAA4B,mBAATD,EAAsBA,EAAOL,KAAKK,GACvE,GAAIG,IAAgBR,KAAKD,YAAa,CACpC,IAAIU,EAAc,WAChB,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAOC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC3EF,EAAKE,GAAQJ,UAAUI,GAGzBR,EAAMZ,aAAeN,SAAS2B,QAAQC,SACtCT,EAAYU,KAAKC,MAAMX,EAAa,CAACD,GAAOa,OAAOP,KAGjDP,EACFA,EAAWG,EACc,mBAATJ,EAChBA,EAAOI,EAEPT,KAAKK,GAAQI,EAIjB,OAAOpB,SAASC,OAAO+B,UAAUlB,MAAMe,KAAKlB,KAAMI,EAAQC,EAAMC","file":"base_router.min.js","sourcesContent":["'use strict';\n\n/* exported BaseRouter */\nvar BaseRouter = Backbone.Router.extend({\n\n  // PROPERTY DEFINITION\n\n  $containers: {},\n\n  app: null,\n\n  commonModel: null,\n\n  lastFragment: null,\n\n  routes: {\n    '*default': 'defautRoute'\n  },\n\n  views: {},\n\n  // METHOD DEFINITION\n\n  defautRoute: function defautRoute() {\n    if (this.lastFragment) {\n      this.navigate(this.lastFragment, { trigger: false });\n    }\n  },\n\n  route: function route(_route, name, callback) {\n    var _this = this;\n\n    var oldCallback = callback || typeof name === 'function' ? name : this[name];\n    if (oldCallback !== this.defautRoute) {\n      var newCallback = function newCallback() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.lastFragment = Backbone.history.fragment;\n        oldCallback.call.apply(oldCallback, [_this].concat(args));\n      };\n\n      if (callback) {\n        callback = newCallback;\n      } else if (typeof name === 'function') {\n        name = newCallback;\n      } else {\n        this[name] = newCallback;\n      }\n    }\n\n    return Backbone.Router.prototype.route.call(this, _route, name, callback);\n  }\n});"]}