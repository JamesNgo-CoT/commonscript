{"version":3,"sources":["backbone/data_collection.min.js"],"names":["DataCollection","Backbone","Collection","extend","syncRequiresLogin","fetchAll","fetchParameters","$count","model","_len","arguments","length","arg","Array","_key","Function","prototype","bind","apply","DataModel","concat","totalRecords","fetch","_this","this","options","undefined","$","_","result","urlParameters","k","push","join","call","then","$skip","$top","parse","response","isArray","hasOwnProperty"],"mappings":"AAAA,aAKA,IAAIA,eAAiBC,SAASC,WAAWC,OAAO,CAI9CC,mBAAmB,EAEnBC,UAAU,EAEVC,gBAAiB,CACfC,QAAQ,GAGVC,MAAO,WACL,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAMC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC1EF,EAAIE,GAAQJ,UAAUI,GAGxB,OAAO,IAAKC,SAASC,UAAUC,KAAKC,MAAMC,UAAW,CAAC,MAAMC,OAAOR,MAGrES,aAAc,KAIdC,MAAO,WACL,IAAIC,EAAQC,KAERC,EAA6B,EAAnBf,UAAUC,aAA+Be,IAAjBhB,UAAU,GAAmBA,UAAU,GAAK,GAElFc,KAAKH,aAAe,KAEpB,IAAIf,EAAkBqB,EAAExB,OAAO,GAAIyB,EAAEC,OAAOL,KAAM,mBAAoBI,EAAEC,OAAOJ,EAAS,oBACpFpB,EAAWuB,EAAEC,OAAOJ,EAAS,WAAYG,EAAEC,OAAOL,KAAM,YAAY,IACpEnB,IACFC,EAAwB,QAAI,EAC5BA,EAAuB,MAAI,EAC3BA,EAAsB,KAAI,GAG5B,IAAIwB,EAAgB,GACpB,IAAK,IAAIC,KAAKzB,EACZwB,EAAcE,KAAKD,EAAI,IAAMzB,EAAgByB,IAI/C,OAFAN,EAAa,IAAI,CAACG,EAAEC,OAAOL,KAAM,OAAQM,EAAcG,KAAK,MAAMA,KAAK,KAEhEhC,SAASC,WAAWc,UAAUM,MAAMY,KAAKV,KAAMC,GAASU,KAAK,WAClE,GAAI9B,GAAiC,EAArBkB,EAAMF,eAAkD,IAA9Bf,EAAwB,QAAoC,MAAtBiB,EAAMF,aACpF,OAAOE,EAAMD,MAAMK,EAAExB,OAAOsB,EAAS,CACnCnB,gBAAiBqB,EAAExB,OAAOyB,EAAEC,OAAOJ,EAAS,mBAAoB,CAC9DW,MAAO,EACPC,KAAMd,EAAMF,qBAOtBiB,MAAO,SAAeC,EAAUd,GAW9B,OAVIc,IAAa1B,MAAM2B,QAAQD,KACzBA,EAAS,kBACXf,KAAKH,aAAekB,EAAS,kBAG1B1B,MAAM2B,QAAQD,IAAaA,EAASE,eAAe,WACtDF,EAAWA,EAAgB,QAIxBtC,SAASC,WAAWc,UAAUsB,MAAMJ,KAAKV,KAAMe,EAAUd","file":"data_collection.min.js","sourcesContent":["'use strict';\n\n/* global DataModel */\n\n/* exported DataCollection */\nvar DataCollection = Backbone.Collection.extend({\n\n  // PROPERTY DEFINITION\n\n  syncRequiresLogin: false,\n\n  fetchAll: false,\n\n  fetchParameters: {\n    $count: false\n  },\n\n  model: function model() {\n    for (var _len = arguments.length, arg = Array(_len), _key = 0; _key < _len; _key++) {\n      arg[_key] = arguments[_key];\n    }\n\n    return new (Function.prototype.bind.apply(DataModel, [null].concat(arg)))();\n  },\n\n  totalRecords: null,\n\n  // METHOD DEFINITION\n\n  fetch: function fetch() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.totalRecords = null;\n\n    var fetchParameters = $.extend({}, _.result(this, 'fetchParameters'), _.result(options, 'fetchParameters'));\n    var fetchAll = _.result(options, 'fetchAll', _.result(this, 'fetchAll', false));\n    if (fetchAll) {\n      fetchParameters['$count'] = true;\n      fetchParameters['$skip'] = 0;\n      fetchParameters['$top'] = 1;\n    }\n\n    var urlParameters = [];\n    for (var k in fetchParameters) {\n      urlParameters.push(k + '=' + fetchParameters[k]);\n    }\n    options['url'] = [_.result(this, 'url'), urlParameters.join('&')].join('?');\n\n    return Backbone.Collection.prototype.fetch.call(this, options).then(function () {\n      if (fetchAll && _this.totalRecords > 1 && fetchParameters['$count'] === true && _this.totalRecords != null) {\n        return _this.fetch($.extend(options, {\n          fetchParameters: $.extend(_.result(options, 'fetchParameters'), {\n            $skip: 0,\n            $top: _this.totalRecords\n          })\n        }));\n      }\n    });\n  },\n\n  parse: function parse(response, options) {\n    if (response && !Array.isArray(response)) {\n      if (response['@odata.count']) {\n        this.totalRecords = response['@odata.count'];\n      }\n\n      if (!Array.isArray(response) && response.hasOwnProperty('value')) {\n        response = response['value'];\n      }\n    }\n\n    return Backbone.Collection.prototype.parse.call(this, response, options);\n  }\n});"]}