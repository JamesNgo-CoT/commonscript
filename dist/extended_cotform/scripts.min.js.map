{"version":3,"sources":["extended_cotform/scripts.min.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","cot_form","validatorOptions","fieldDefinition","retVal","this","excluded","addformfield","fieldContainer","$","prop","ExtendedCotForm","_CotForm","apply","arguments","CotForm","_this2","options","definition","_definition","preRenderPromises","sectionsIndex","sectionsLength","sections","section","preRender","indexOf","getGlobal","push","_model","view","rowsIndex","rowsLength","rows","row","fieldsIndex","fieldsLength","fields","field","choices","bindTo","type","map","text","unshift","Promise","all","then","postRenderPromises","_sectionsIndex","_sectionsLength","_section","postRender","_rowsIndex","_rowsLength","_row","_fieldsIndex","_fieldsLength","_field"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* global cot_form CotForm getGlobal */\n\ncot_form.prototype.validatorOptions = function (validatorOptions) {\n  return function (fieldDefinition) {\n    var retVal = validatorOptions.call(this, fieldDefinition);\n    if (fieldDefinition.excluded != null) {\n      retVal.excluded = fieldDefinition.excluded;\n    }\n    return retVal;\n  };\n}(cot_form.prototype.validatorOptions);\n\ncot_form.prototype.addformfield = function (addformfield) {\n  return function (fieldDefinition, fieldContainer) {\n    addformfield.call(this, fieldDefinition, fieldContainer);\n    if (fieldDefinition['readOnly'] === true) {\n      $(':input', $(fieldContainer)).prop('readonly', true);\n    }\n  };\n}(cot_form.prototype.addformfield);\n\n/* exported ExtendedCotForm */\n\nvar ExtendedCotForm = function (_CotForm) {\n  _inherits(ExtendedCotForm, _CotForm);\n\n  function ExtendedCotForm() {\n    _classCallCheck(this, ExtendedCotForm);\n\n    return _possibleConstructorReturn(this, (ExtendedCotForm.__proto__ || Object.getPrototypeOf(ExtendedCotForm)).apply(this, arguments));\n  }\n\n  _createClass(ExtendedCotForm, [{\n    key: 'render',\n\n\n    // METHOD DEFINITION\n\n    value: function render() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var definition = this._definition;\n\n      var preRenderPromises = [];\n      for (var sectionsIndex = 0, sectionsLength = definition.sections.length; sectionsIndex < sectionsLength; sectionsIndex++) {\n        var section = definition.sections[sectionsIndex];\n        if (section.preRender) {\n          if (typeof section.preRender === 'string') {\n            if (section.preRender.indexOf('function(') === 0) {\n              section.preRender = Function('return ' + section.preRender)();\n            } else {\n              section.preRender = getGlobal(section.preRender);\n            }\n          }\n          preRenderPromises.push(section.preRender(section, definition, this._model, options.view));\n        }\n\n        for (var rowsIndex = 0, rowsLength = section.rows.length; rowsIndex < rowsLength; rowsIndex++) {\n          var row = section.rows[rowsIndex];\n          if (row.preRender) {\n            if (typeof row.preRender === 'string') {\n              if (row.preRender.indexOf('function(') === 0) {\n                row.preRender = Function('return ' + row.preRender)();\n              } else {\n                row.preRender = getGlobal(row.preRender);\n              }\n            }\n            preRenderPromises.push(row.preRender(row, section, definition, this._model, options.view));\n          }\n\n          for (var fieldsIndex = 0, fieldsLength = row.fields.length; fieldsIndex < fieldsLength; fieldsIndex++) {\n            var field = row.fields[fieldsIndex];\n\n            if (field.choices && field.bindTo && field.type != 'checkbox') {\n              var value = this._model.get(field.bindTo);\n              if (value) {\n                var choices = field.choices.map(function (value) {\n                  return value.value || value.text;\n                });\n                if (choices.indexOf(value) === -1) {\n                  field.choices.unshift({ text: value });\n                }\n              }\n            }\n\n            if (field.preRender) {\n              if (typeof field.preRender === 'string') {\n                if (field.preRender.indexOf('function(') === 0) {\n                  field.preRender = Function('return ' + field.preRender)();\n                } else {\n                  field.preRender = getGlobal(field.preRender);\n                }\n              }\n              preRenderPromises.push(field.preRender(field, row, section, definition, this._model, options.view));\n            }\n          }\n        }\n      }\n\n      return Promise.all(preRenderPromises).then(function () {\n        _get(ExtendedCotForm.prototype.__proto__ || Object.getPrototypeOf(ExtendedCotForm.prototype), 'render', _this2).call(_this2, options);\n\n        var postRenderPromises = [];\n        for (var _sectionsIndex = 0, _sectionsLength = definition.sections.length; _sectionsIndex < _sectionsLength; _sectionsIndex++) {\n          var _section = definition.sections[_sectionsIndex];\n          if (_section.postRender) {\n            if (typeof _section.postRender === 'string') {\n              if (_section.postRender.indexOf('function(') === 0) {\n                _section.postRender = Function('return ' + _section.postRender)();\n              } else {\n                _section.postRender = getGlobal(_section.postRender);\n              }\n            }\n            postRenderPromises.push(_section.postRender(_section, definition, _this2._model, options.view));\n          }\n\n          for (var _rowsIndex = 0, _rowsLength = _section.rows.length; _rowsIndex < _rowsLength; _rowsIndex++) {\n            var _row = _section.rows[_rowsIndex];\n            if (_row.postRender) {\n              if (typeof _row.postRender === 'string') {\n                if (_row.postRender.indexOf('function(') === 0) {\n                  _row.postRender = Function('return ' + _row.postRender)();\n                } else {\n                  _row.postRender = getGlobal(_row.postRender);\n                }\n              }\n              postRenderPromises.push(_row.postRender(_row, _section, definition, _this2._model, options.view));\n            }\n\n            for (var _fieldsIndex = 0, _fieldsLength = _row.fields.length; _fieldsIndex < _fieldsLength; _fieldsIndex++) {\n              var _field = _row.fields[_fieldsIndex];\n              if (_field.postRender) {\n                if (typeof _field.postRender === 'string') {\n                  if (_field.postRender.indexOf('function(') === 0) {\n                    _field.postRender = Function('return ' + _field.postRender)();\n                  } else {\n                    _field.postRender = getGlobal(_field.postRender);\n                  }\n                }\n                postRenderPromises.push(_field.postRender(_field, _row, _section, definition, _this2._model, options.view));\n              }\n            }\n          }\n        }\n\n        return Promise.all(postRenderPromises);\n      });\n    }\n  }]);\n\n  return ExtendedCotForm;\n}(CotForm);"]}